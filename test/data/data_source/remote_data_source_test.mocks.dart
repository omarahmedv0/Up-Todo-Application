// Mocks generated by Mockito 5.4.4 from annotations
// in up_todo_app/test/data/data_source/remote_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:up_todo_app/data/networking/api_service_client.dart' as _i3;
import 'package:up_todo_app/data/responses/responses.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLoginResponse_0 extends _i1.SmartFake implements _i2.LoginResponse {
  _FakeLoginResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetAllTodosByUserIdResponse_1 extends _i1.SmartFake
    implements _i2.GetAllTodosByUserIdResponse {
  _FakeGetAllTodosByUserIdResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTodoResponse_2 extends _i1.SmartFake implements _i2.TodoResponse {
  _FakeTodoResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiServiceClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiServiceClient extends _i1.Mock implements _i3.ApiServiceClient {
  MockApiServiceClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.LoginResponse> login(Map<String, dynamic>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [data],
        ),
        returnValue: _i4.Future<_i2.LoginResponse>.value(_FakeLoginResponse_0(
          this,
          Invocation.method(
            #login,
            [data],
          ),
        )),
      ) as _i4.Future<_i2.LoginResponse>);

  @override
  _i4.Future<_i2.GetAllTodosByUserIdResponse> getAllTodosByUserId(
    int? userId,
    int? limit,
    int? skip,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllTodosByUserId,
          [
            userId,
            limit,
            skip,
          ],
        ),
        returnValue: _i4.Future<_i2.GetAllTodosByUserIdResponse>.value(
            _FakeGetAllTodosByUserIdResponse_1(
          this,
          Invocation.method(
            #getAllTodosByUserId,
            [
              userId,
              limit,
              skip,
            ],
          ),
        )),
      ) as _i4.Future<_i2.GetAllTodosByUserIdResponse>);

  @override
  _i4.Future<_i2.TodoResponse> editTodo(
    int? todoID,
    bool? completed,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editTodo,
          [
            todoID,
            completed,
          ],
        ),
        returnValue: _i4.Future<_i2.TodoResponse>.value(_FakeTodoResponse_2(
          this,
          Invocation.method(
            #editTodo,
            [
              todoID,
              completed,
            ],
          ),
        )),
      ) as _i4.Future<_i2.TodoResponse>);

  @override
  _i4.Future<_i2.TodoResponse> deleteTodo(int? todoID) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [todoID],
        ),
        returnValue: _i4.Future<_i2.TodoResponse>.value(_FakeTodoResponse_2(
          this,
          Invocation.method(
            #deleteTodo,
            [todoID],
          ),
        )),
      ) as _i4.Future<_i2.TodoResponse>);

  @override
  _i4.Future<_i2.TodoResponse> addTodo(Map<String, dynamic>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTodo,
          [data],
        ),
        returnValue: _i4.Future<_i2.TodoResponse>.value(_FakeTodoResponse_2(
          this,
          Invocation.method(
            #addTodo,
            [data],
          ),
        )),
      ) as _i4.Future<_i2.TodoResponse>);
}
