// Mocks generated by Mockito 5.4.4 from annotations
// in up_todo_app/test/data/repository/repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:shared_preferences/shared_preferences.dart' as _i3;
import 'package:up_todo_app/app/app_prefs.dart' as _i10;
import 'package:up_todo_app/data/data_source/local_data_source.dart' as _i7;
import 'package:up_todo_app/data/data_source/remote_data_source.dart' as _i4;
import 'package:up_todo_app/data/networking/network_info.dart' as _i9;
import 'package:up_todo_app/data/requests/requests.dart' as _i6;
import 'package:up_todo_app/data/responses/responses.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLoginResponse_0 extends _i1.SmartFake implements _i2.LoginResponse {
  _FakeLoginResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetAllTodosByUserIdResponse_1 extends _i1.SmartFake
    implements _i2.GetAllTodosByUserIdResponse {
  _FakeGetAllTodosByUserIdResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTodoResponse_2 extends _i1.SmartFake implements _i2.TodoResponse {
  _FakeTodoResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedPreferences_3 extends _i1.SmartFake
    implements _i3.SharedPreferences {
  _FakeSharedPreferences_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i4.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.LoginResponse> login(_i6.LoginRequestBody? loginRequestBody) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [loginRequestBody],
        ),
        returnValue: _i5.Future<_i2.LoginResponse>.value(_FakeLoginResponse_0(
          this,
          Invocation.method(
            #login,
            [loginRequestBody],
          ),
        )),
      ) as _i5.Future<_i2.LoginResponse>);

  @override
  _i5.Future<_i2.GetAllTodosByUserIdResponse> getAllTodosByUserId(
          _i6.GetAllTodosRequest? getAllTodosRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllTodosByUserId,
          [getAllTodosRequest],
        ),
        returnValue: _i5.Future<_i2.GetAllTodosByUserIdResponse>.value(
            _FakeGetAllTodosByUserIdResponse_1(
          this,
          Invocation.method(
            #getAllTodosByUserId,
            [getAllTodosRequest],
          ),
        )),
      ) as _i5.Future<_i2.GetAllTodosByUserIdResponse>);

  @override
  _i5.Future<_i2.TodoResponse> addTodo(
          _i6.AddTodoRequestBody? addTodoRequestBody) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTodo,
          [addTodoRequestBody],
        ),
        returnValue: _i5.Future<_i2.TodoResponse>.value(_FakeTodoResponse_2(
          this,
          Invocation.method(
            #addTodo,
            [addTodoRequestBody],
          ),
        )),
      ) as _i5.Future<_i2.TodoResponse>);

  @override
  _i5.Future<_i2.TodoResponse> deleteTodo(int? todoID) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [todoID],
        ),
        returnValue: _i5.Future<_i2.TodoResponse>.value(_FakeTodoResponse_2(
          this,
          Invocation.method(
            #deleteTodo,
            [todoID],
          ),
        )),
      ) as _i5.Future<_i2.TodoResponse>);

  @override
  _i5.Future<_i2.TodoResponse> editTodo(
          _i6.UpdateTodoRequestBody? updateTodoRequestBody) =>
      (super.noSuchMethod(
        Invocation.method(
          #editTodo,
          [updateTodoRequestBody],
        ),
        returnValue: _i5.Future<_i2.TodoResponse>.value(_FakeTodoResponse_2(
          this,
          Invocation.method(
            #editTodo,
            [updateTodoRequestBody],
          ),
        )),
      ) as _i5.Future<_i2.TodoResponse>);
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i7.LocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<String> saveTheTodosFromRemoteToLocal(
          _i2.GetAllTodosByUserIdResponse? getAllTodosByUserIdResponse) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTheTodosFromRemoteToLocal,
          [getAllTodosByUserIdResponse],
        ),
        returnValue: _i5.Future<String>.value(_i8.dummyValue<String>(
          this,
          Invocation.method(
            #saveTheTodosFromRemoteToLocal,
            [getAllTodosByUserIdResponse],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<_i2.GetAllTodosByUserIdResponse> getAllTodosFromLocal() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllTodosFromLocal,
          [],
        ),
        returnValue: _i5.Future<_i2.GetAllTodosByUserIdResponse>.value(
            _FakeGetAllTodosByUserIdResponse_1(
          this,
          Invocation.method(
            #getAllTodosFromLocal,
            [],
          ),
        )),
      ) as _i5.Future<_i2.GetAllTodosByUserIdResponse>);

  @override
  _i5.Future<String> editTodoInLocal(
          _i6.UpdateTodoRequestBody? updateTodoRequestBody) =>
      (super.noSuchMethod(
        Invocation.method(
          #editTodoInLocal,
          [updateTodoRequestBody],
        ),
        returnValue: _i5.Future<String>.value(_i8.dummyValue<String>(
          this,
          Invocation.method(
            #editTodoInLocal,
            [updateTodoRequestBody],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<String> addTodoToLocal(
          _i6.AddTodoRequestBody? addTodoRequestBody) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTodoToLocal,
          [addTodoRequestBody],
        ),
        returnValue: _i5.Future<String>.value(_i8.dummyValue<String>(
          this,
          Invocation.method(
            #addTodoToLocal,
            [addTodoRequestBody],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<String> deleteTodoFromLocal(int? todoID) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodoFromLocal,
          [todoID],
        ),
        returnValue: _i5.Future<String>.value(_i8.dummyValue<String>(
          this,
          Invocation.method(
            #deleteTodoFromLocal,
            [todoID],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<String> deleteDatabase() => (super.noSuchMethod(
        Invocation.method(
          #deleteDatabase,
          [],
        ),
        returnValue: _i5.Future<String>.value(_i8.dummyValue<String>(
          this,
          Invocation.method(
            #deleteDatabase,
            [],
          ),
        )),
      ) as _i5.Future<String>);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i3.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
      ) as Set<String>);

  @override
  Object? get(String? key) => (super.noSuchMethod(Invocation.method(
        #get,
        [key],
      )) as Object?);

  @override
  bool? getBool(String? key) => (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);

  @override
  int? getInt(String? key) => (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);

  @override
  double? getDouble(String? key) => (super.noSuchMethod(Invocation.method(
        #getDouble,
        [key],
      )) as double?);

  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);

  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getStringList,
        [key],
      )) as List<String>?);

  @override
  _i5.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i9.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [AppPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppPreferences extends _i1.Mock implements _i10.AppPreferences {
  MockAppPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.SharedPreferences get preferences => (super.noSuchMethod(
        Invocation.getter(#preferences),
        returnValue: _FakeSharedPreferences_3(
          this,
          Invocation.getter(#preferences),
        ),
      ) as _i3.SharedPreferences);

  @override
  set preferences(_i3.SharedPreferences? _preferences) => super.noSuchMethod(
        Invocation.setter(
          #preferences,
          _preferences,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> setLoggedIn(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setLoggedIn,
          [value],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  bool isLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isLoggedIn,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<void> setLocalDbCreated(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setLocalDbCreated,
          [value],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  bool isLocalDbCreated() => (super.noSuchMethod(
        Invocation.method(
          #isLocalDbCreated,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isRemoteTodosStored() => (super.noSuchMethod(
        Invocation.method(
          #isRemoteTodosStored,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<void> setRemoteTodosStored(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setRemoteTodosStored,
          [value],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> saveUserId(int? userId) => (super.noSuchMethod(
        Invocation.method(
          #saveUserId,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  int getUserId() => (super.noSuchMethod(
        Invocation.method(
          #getUserId,
          [],
        ),
        returnValue: 0,
      ) as int);
}
